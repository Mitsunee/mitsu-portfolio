---
import type { HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"a"> {
  /**
   * src of the icon
   */
  src: string;
  /**
   * hover color of the button
   */
  hover?: string;
}

const { src, hover, rel: relProp, ...props } = Astro.props;

// css vars
const bg = `url("${src}")`;

// make sure rel include security params, but doesn't override value
const relArr = relProp ? relProp.split(" ") : [];
if (props.target == "_blank") {
  if (!relArr.includes("noopener")) relArr.push("noopener");
  if (!relArr.includes("noreferrer")) relArr.push("noreferrer");
}
relArr.sort();
const rel = relArr.join(" ");
---

<a {...props} rel={rel}><div></div></a>

<style define:vars={{ bg, hover }}>
  a {
    display: block;
    position: relative;
    width: var(--icon-size);
    height: var(--icon-size);
    transition: transform var(--speed) var(--ease);

    &:hover {
      transform: scale(var(--hover-scale));
      & div {
        background-color: var(--hover);
      }
    }

    &:before {
      display: block;
      background-color: #373a43;
      position: absolute;
      inset: 2px;
      z-index: 1;
      border-radius: 3px;
      content: "";
    }

    & div {
      position: absolute;
      inset: 8px;
      z-index: 2;
      mask-image: var(--bg);
      mask-size: cover;
      background-color: var(--primary);
      transition: background-color var(--speed) ease-out;
    }
  }
</style>
